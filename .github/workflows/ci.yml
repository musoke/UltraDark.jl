name: CI
on:
  push:
      branches:
        - 'main'
        - 'release-'
      tags:
        - '*'
  pull_request:
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - include-all-prerelease=${{ matrix.include-all-prereleases }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.8'
          - '1.9'
          - '1.10'
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        arch:
          - x64
        include:
          - os: ubuntu-latest
            version: 'nightly'
            arch: x64
            allow_failure: true # separate test for nightly allowed to fail
          - os: ubuntu-latest
            version: '1' # automatically expands to the latest tagged 1.x release of Julia
            arch: x64
            allow_failure: false
            include-all-prereleases: true # latest tagged version should include prereleases
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v1
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
        env:
          # Fix for Plots.jl with GR backend.
          GKSwstype: nul
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v3
        with:
          file: lcov.info
      # - uses: julia-actions/julia-uploadcoveralls@v1
      #   env:
      #     COVERALLS_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1'
      - run: |
          julia --project=docs -e '
            using Pkg
            Pkg.develop(PackageSpec(path=pwd()))
            Pkg.instantiate()'
      - run: |
          julia --project=docs -e '
            using Documenter: doctest
            using UltraDark
            doctest(UltraDark)'
      - run: julia --project=docs docs/make.jl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
